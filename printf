#include <stdarg.h>
#include <unistd.h>

/**
 * _printf - custom printf function
 * @format: format string
 *
 * Return: number of characters printed (excluding the null byte)
 */
int _printf(const char *format, ...)
{
    va_list args;
    int count = 0;
    const char *ptr;
    char c;

    va_start(args, format);

    for (ptr = format; *ptr != '\0'; ptr++)
    {
        if (*ptr == '%')
        {
            ptr++; /* Move past '%' */
            if (*ptr == '\0') /* In case % is the last character */
                break;

            switch (*ptr)
            {
            case 'c':
                c = va_arg(args, int);
                write(1, &c, 1);
                count++;
                break;
            case 's':
                {
                    const char *str = va_arg(args, const char *);
                    while (*str != '\0')
                    {
                        write(1, str, 1);
                        str++;
                        count++;
                    }
                }
                break;
            case '%':
                write(1, "%", 1);
                count++;
                break;
            default:
                write(1, "%", 1);
                write(1, ptr, 1);
                count += 2;
            }
        }
        else
        {
            write(1, ptr, 1);
            count++;
        }
    }

    va_end(args);

    return count;
}

int main(void)
{
    _printf("Hello, %c World! %s %%%c\n", 'H', "Custom printf", '!');
    _printf("Number: %d\n", 12345);

    return (0);
}

